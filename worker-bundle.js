const t=255,e=[...Array(256)].map(((e,a)=>{return((n=a/t)<.04045?n/12.92:Math.pow((n+.055)/1.055,2.4))*t;var n})),a=[...Array(256)].map(((e,a)=>{return((n=a/t)>.0031308?1.055*Math.pow(n,1/2.4)-.055:12.92*n)*t;var n}));function n(t){return 3==t.length?[e[t[0]],e[t[1]],e[t[2]]]:[e[t[0]],e[t[1]],e[t[2]],t[3]]}function i(t,e){const a=t[3]/255;return[t[0]*a+e[0]*(1-a),t[1]*a+e[1]*(1-a),t[2]*a+e[2]*(1-a),255]}function s(t,e){const a=t[3]/255,n=e[3]/255*(1-a),i=a+n;return[(t[0]*a+e[0]*n)/i,(t[1]*a+e[1]*n)/i,(t[2]*a+e[2]*n)/i,255*i]}function o(t,e){const a=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2];return a<128?Math.sqrt(2*a*a+4*n*n+3*i*i):Math.sqrt(3*a*a+4*n*n+2*i*i)}function h(t,e){if(0==t.length)return[];t=[...t];const a=[...Array(t[0].value.length)].map(((t,e)=>e));function n(t){const e=a.map((()=>({min:1/0,max:-1/0})));for(const{value:n}of t)for(const t of a)e[t].min=Math.min(e[t].min,n[t]),e[t].max=Math.max(e[t].max,n[t]);return e}const i=[{objects:t,ranges:n(t)}];for(;i.length<e&&i.some((({objects:t})=>t.length>1));){var s,o,h=0;for(const t of i)for(const e of a){const{min:a,max:n}=t.ranges[e],i=n-a;h<i&&(h=i,s=t,o=e)}s.objects.sort((({value:t},{value:e})=>e[o]-t[o]));const t=s.objects.reduce(((t,{count:e})=>t+e),0);for(var r=0,l=0;r<t/2;)r+=s.objects[l].count,l++;if(r>t/2){const e=r-s.objects[l-1].count;Math.abs(e-t/2)<Math.abs(r-t/2)&&(l-=1)}const e=s.objects.splice(l),c={objects:e,ranges:n(e)};s.ranges=n(s.objects),i.push(c)}return i.map((({objects:t})=>t))}class r{constructor(...t){if("number"==typeof t[0]){const[e,a]=t;this.data=new Float32Array(e*a),this.width=e,this.height=a}else if(t[0]instanceof ArrayBuffer){const[e,a]=t;this.data=new Float32Array(e),this.width=a,this.height=e.byteLength/4/a}else{const[e,a]=t,n=e.width*e.height;this.data=new Float32Array(n),this.width=e.width,this.height=e.height;for(let t=0;t<n;t++){const n=e.getPixel(t);this.data[t]=o(n,a)}}this.length=this.width*this.height,this.kind=r.kind}getDiff(t){return this.data[t]}setDiff(t,e){this.data[t]=e}}r.kind="ImageDiff";class l{constructor(...t){if("number"==typeof t[0]){const[e,a]=t;this.imageData=new ImageData(e,a)}else if(t[0]instanceof Uint8ClampedArray){const[e,a]=t;this.imageData=new ImageData(e,a)}else{const[e]=t;this.imageData=new ImageData(e.data.slice(0),e.width)}this.width=this.imageData.width,this.height=this.imageData.height,this.length=this.width*this.height,this.kind=l.kind}getPixel(t){return t*=4,[this.imageData.data[t+0],this.imageData.data[t+1],this.imageData.data[t+2],this.imageData.data[t+3]]}setPixel(t,e){t*=4,this.imageData.data[t+0]=e[0],this.imageData.data[t+1]=e[1],this.imageData.data[t+2]=e[2],this.imageData.data[t+3]=e[3]}static get[Symbol.species](){return ImageData}}function c(t,e){let a=1/0,n=0;for(let i=0;i<e.length;i++){const s=o(t,e[i]);s<a&&(a=s,n=i)}return n}l.kind="RGBAImage";class f{constructor(t,e=256){this.kind=f.kind,t=new l(t.imageData),this.width=t.width,this.height=t.height,this.length=t.length,this.data=new Uint8Array(this.length);const a=function(t){const e=new Map;for(let a=0;a<t.length;a++){const n=t.getPixel(a),i=M(n);e.has(i),e.has(i)?e.get(i).count++:e.set(i,{value:n,count:1})}return[...e.values()]}(t),n=h(a,e);this.palette=n.map((t=>function(t){var e=[0,0,0,0];for(const a of t)e=e.map(((t,e)=>t+a[e]));return e.map((e=>Math.round(e/t.length)))}(t.map((({value:t})=>t)))));for(let e=0;e<t.length;e++){const a=t.getPixel(e),n=c(a,this.palette);this.data[e]=n;const o=a.map(((t,e)=>this.palette[n][e]-t)),h=[],r=e%t.width,l=Math.floor(e/t.width);//!!
r!=t.width-1&&h.push({offset:e+1,factor:7/16}),l!=t.height-1&&(0!=r&&h.push({offset:e+t.width-1,factor:3/16}),h.push({offset:e+t.width+0,factor:5/16}),r!=t.width-1&&h.push({offset:e+t.width+1,factor:1/16}));for(let{offset:e,factor:a}of h){const n=t.getPixel(e),h=o.map((t=>-t*a));t.setPixel(e,(s=h,[(i=n)[0]+s[0],i[1]+s[1],i[2]+s[2],i[3]+s[3]]))}}var i,s}getPixel(t){const e=this.data[t];return this.palette[e]}getImageData(){const t=new ImageData(this.width,this.height);for(let e=0;e<this.length;e++){const a=this.getPixel(e);t.data[4*e+0]=a[0],t.data[4*e+1]=a[1],t.data[4*e+2]=a[2],t.data[4*e+3]=a[3]}return t}}f.kind="PaletteImage";const u={ImageDiff:r,RGBAImage:l,PaletteImage:f},d="repeat-symbol";class g{constructor(){this.data=new Uint8Array(2e3),this.length=0,this.byte=0,this.bitLength=0}grow(t){const e=new Uint8Array(this.data.byteLength+t);e.set(this.data),this.data=e}write(t){for(const e of t)this.byte=(this.byte<<1)+e,this.bitLength++,8==this.bitLength&&(this.length>=this.data.byteLength&&this.grow(2e3),this.data[this.length++]=this.byte,this.byte=0,this.bitLength=0)}end(){return 0!=this.bitLength&&(this.byte=this.byte<<8-this.bitLength,this.length>=this.data.byteLength&&this.grow(1),this.data[this.length++]=this.byte),{data:this.data.slice(0,this.length),lastByteLength:this.bitLength}}}function m(t){if(0!=t.length){if(1==t.length)return{count:t[0].count,left:t[0]};{const e=[...t].sort((({count:t},{count:e})=>e-t));for(;e.length>1;){const t=e.pop(),a=e.pop();e.push({count:t.count+a.count,left:t,right:a}),e.sort((({count:t},{count:e})=>e-t))}return e[0]}}}function p(t,e=[]){if(null!=t){if("value"in t){const{value:a,index:n}=t;return[{value:a,index:n,code:e}]}{const{left:a,right:n}=t;return p(a,[...e,0]).concat(p(n,[...e,1]))}}return[]}class b{constructor(t,e){this.kind=e,this.width=t.width,this.height=t.height,this.length=t.length}}class v extends b{constructor(t){super(t,v.kind),this.data=new DataView(new ArrayBuffer(5*this.length));var e=0;for(let a=0;a<this.length;a++){const n=t.getPixel(a)[3];0!=n&&(this.data.setUint32(5*e+0,a),this.data.setUint8(5*e+4,n),e++)}this.data=new DataView(this.data.buffer.slice(0,5*e))}*[Symbol.iterator](){for(let t=0;t<this.data.byteLength/5;t++){const e=this.data.getUint32(5*t+0),a=this.data.getUint8(5*t+4),n=[0,0,0,a];0!=a&&(yield{offset:e,color:n})}}}v.kind="AlphaBitmap";class w extends b{constructor(t){super(t,w.kind),this.data=new DataView(new ArrayBuffer(8*this.length));var e=0;for(let a=0;a<this.length;a++){const n=t.getPixel(a);0!=n[3]&&(this.data.setUint32(8*e,a),this.data.setUint8(8*e+4,n[0]),this.data.setUint8(8*e+5,n[1]),this.data.setUint8(8*e+6,n[2]),this.data.setUint8(8*e+7,n[3]),e++)}this.data=new DataView(this.data.buffer.slice(0,8*e))}*[Symbol.iterator](){for(let t=0;t<this.data.byteLength/8;t++){const e=this.data.getUint32(8*t),a=this.data.getUint8(8*t+4),n=this.data.getUint8(8*t+5),i=this.data.getUint8(8*t+6),s=this.data.getUint8(8*t+7),o=[a,n,i,s];0!=s&&(yield{offset:e,color:o})}}}function y(t,e,a,n){var i=t.findIndex((t=>t.value==e));-1==i?(t.push({value:e,count:1}),i=t.length-1):t[i].count++,a.setUint16(n,i)}w.kind="ColorBitmap";class x extends b{constructor(t){super(t,x.kind),this.data=new DataView(new ArrayBuffer(4*this.length));const e=[{value:M([0,0,0,0]),count:0}],a=[{value:1,count:0}];var n,i=0,s=0;for(let o=0;o<this.length;o++){const h=M(t.getPixel(o));i++,null!=n&&n!=h&&(y(e,n,this.data,s),s+=2,y(a,i,this.data,s),s+=2,i=0),n=h}y(e,n,this.data,s),s+=2,y(a,i,this.data,s),s+=2,this.data=new DataView(this.data.buffer.slice(0,s)),this.colors=e.map((({value:t,count:e},a)=>({value:A(t),count:e,index:a}))),this.lengths=a}*[Symbol.iterator](){var t=0;for(let e=0;e<this.data.byteLength/4;e++){const a=this.data.getUint16(4*e+0),n=this.colors[a].value,i=this.data.getUint16(4*e+2),s=this.lengths[i].value;if(0!=n[3])for(let e=0;e<s;e++)yield{offset:t,color:n},t++;else t+=s}}reduceColors(t){const e=[...Array(this.colors.length)],a=[...this.colors];a[0].count>0&&(e[0]=a.shift(),t-=1);const n=h(a,t);for(const t of n){var i=[0,0,0,0];for(const{value:e}of t)i=i.map(((t,a)=>t+e[a]));i=i.map((e=>Math.round(e/t.length)));for(const{index:a}of t)e[a]=i}const s=new DataView(new ArrayBuffer(this.data.byteLength)),o=[],r=[{value:1,count:0}];var l,c=0,f=0;const u=this.data.byteLength/4;for(let t=0;t<u;t++){const a=M(e[this.data.getUint16(4*t+0)]),n=this.data.getUint16(4*t+2),i=this.lengths[n].value;null!=l&&l!=a?(y(o,l,s,f),y(r,c,s,f+=2),f+=2,c=i):c+=i,l=a}y(o,l,s,f),y(r,c,s,f+=2),f+=2,this.data=new DataView(s.buffer.slice(0,f)),this.colors=o.map((({value:t,count:e},a)=>({value:A(t),count:e,index:a}))),this.lengths=r}}x.kind="PaletteBitmap";class D extends b{constructor(t){super(t,D.kind);const e=new x(t);e.reduceColors(16);//!!!
const a=e.lengths.map((({value:t,count:e},a)=>({value:t,count:e,index:a}))),{data:n,lastByteLength:i,literalTree:s,lengthTree:o}=function(t){var e,a;const n=[...t.literals],i=t.lengths.filter((({value:t})=>1!=t)).map((({value:t,count:e},a)=>({value:t-1,count:e,index:a}))),s=i.reduce(((t,{count:e})=>t+e),0);s>0&&n.push({value:d,count:s,index:n.length});const o=m(n),h=m(i),r=p(o).sort((({index:t},{index:e})=>t-e)),l=p(h).sort((({index:t},{index:e})=>t-e)),c=null===(e=r.find((({value:t})=>t==d)))||void 0===e?void 0:e.code,f=new g;for(let e=0;e<t.data.byteLength/4;e++){const n=t.data.getUint16(4*e+0),i=t.data.getUint16(4*e+2),s=null===(a=l[i-1])||void 0===a?void 0:a.value;f.write(r[n].code),s>0&&(f.write(c),f.write(l[i-1].code))}const{data:u,lastByteLength:b}=f.end();return{data:u,lastByteLength:b,literalTree:o,lengthTree:h}}({data:e.data,literals:e.colors,lengths:a});this.data=n,this.lastByteLength=i,this.literalTree=s,this.lengthTree=o}*[Symbol.iterator](){var t,e=!1,a=0;for(const n of function*(t,e,a,n){for(var i,s=a,o=n,h=0,r=0,l=!1;h<t.byteLength-1||h==t.byteLength-1&&r<e;){0==r&&(i=t[h]);const e=i&1<<7-r++;let c;if(l){const t=0==e?null==o?void 0:o.left:null==o?void 0:o.right;"value"in t?(c=t.value,o=n):o=t}else{const t=0==e?null==s?void 0:s.left:null==s?void 0:s.right;"value"in t?(c=t.value,s=a):s=t}null!=c&&(l=c==d,yield c),r>7&&(h++,r=0)}}(this.data,this.lastByteLength,this.literalTree,this.lengthTree))if(n!=d){e||(t=n);const i=e?n:1;if(0!=t[3])for(let e=0;e<i;e++)yield{offset:a,color:t},a++;else a+=i;e=!1}else e=!0}}function L(t,e,a,n){for(var{offset:i,color:o}of a){const a=e+i,h=o[3];if(0!=h&&255!=h){const e=t.getPixel(a);null!=n&&(o=[...n,h]);const i=s(o,e);t.setPixel(a,i)}else 255==h&&(null!=n&&(o=[...n,h]),t.setPixel(a,o))}}function P(t,e,a){const n=[];for(const{offset:i}of a){const a=e+i,s=t.getPixel(a),o=[s[0],s[1],s[2]];n.push(o)}return n}function*U(t){for(t=[...t];0!=t.length;)yield t.splice(Math.floor(t.length*Math.random()),1)[0]}function M(t){return t[0]<<24|t[1]<<16|t[2]<<8|t[3]}function A(t){return[(4278190080&t)>>>24,(16711680&t)>>>16,(65280&t)>>>8,(255&t)>>>0]}D.kind="CompressedBitmap";const k={AlphaBitmap:v,ColorBitmap:w,PaletteBitmap:x,CompressedBitmap:D,...u};function B(t){const e=null==t?void 0:t.kind;return k[e]?Object.setPrototypeOf(t,k[e].prototype):t}function j(t){if(null==t||t.kind,t instanceof Array)return t.map(j);if(t instanceof Object){const e=null==t?void 0:t.kind;return k[e]?B(t):Object.fromEntries(Object.entries(t).map((([t,e])=>[t,j(e)])))}return B(t)}function I(t,e){var a=[0,0,0],n=0;for(const s of t){var i=o(s,e);i=0==i?1e-4:i,a=[a[0]+s[0]/i,a[1]+s[1]/i,a[2]+s[2]/i],n+=1/i}return[a[0]/n,a[1]/n,a[2]/n]}function T(t,e=.5){for(var a,n,i=[1/0,1/0,1/0],s=function(t){var e=[0,0,0];for(const a of t)e=[e[0]+a[0],e[1]+a[1],e[2]+a[2]];return[e[0]/t.length,e[1]/t.length,e[2]/t.length]}(t);(a=i,n=s,[a[0]-n[0],a[1]-n[1],a[2]-n[2]]).some((t=>Math.abs(t)>e));)s=I(t,i=s);return s}const C=[255,255,255];function V(t,e,a,s,h){let r=0;for(let l=0;l<h.length;l++){const h=s+l,c=t.getPixel(h),f=i(n(e.getPixel(h)),C);r=r-a.getDiff(h)+o(c,f)}return r}function O(t,e,a,s,h){for(let{offset:r}of h){const h=s+r,l=e.getPixel(h),c=i(n(t.getPixel(h)),C);a.setDiff(h,o(l,c))}}function S(t,e,a,n){var i;const{original:s,imageDiff:o}=t;for(let t of a){const{bitmaps:a,offset:h}=t,r=a[n];null!==(i=t.best)&&void 0!==i||(t.best={error:1/0});const l=V(s,e,o,h,r);l<t.best.error&&(t.best.error=l,t.best.bitmap=r,t.best.color=t.actualColor)}}const F={calc:async function*({data:t,gridLength:e,cellLength:n,bitmaps:i,animation:s}){const{original:o,image:h,imageDiff:r}=t,c=function(t,e,a){const n=[];for(let i=0;i<t;i++)n.push({offset:i*e,bitmaps:[...U(a)],best:{error:1/0}});return n}(e,n,i);for(let e=0;e<i.length;e++){const n=new l(h.imageData);for(let t of c){const{offset:i,bitmaps:s}=t,h=s[e],r=P(o,i,h);t.actualColor=3==(f=T(r)).length?[a[Math.round(f[0])],a[Math.round(f[1])],a[Math.round(f[2])]]:[a[Math.round(f[0])],a[Math.round(f[1])],a[Math.round(f[2])],f[3]],L(n,i,h,t.actualColor)}s&&(yield n.imageData),S(t,n,c,e)}var f;for(let{best:{bitmap:t,color:e},offset:a}of c)L(h,a,t,e),O(h,o,r,a,t);return{image:h.imageData,imageDiff:r}}};globalThis.addEventListener("message",(async({data:{name:t,id:e,message:a}})=>{if("AsyncGeneratorFunction"==F[t].constructor.name){const i=F[t](j(a));for(var n=!1;!n;){const t=await i.next();globalThis.postMessage({id:e,message:t}),n=t.done}}else{const n=await F[t](j(a));globalThis.postMessage({id:e,message:n})}}));
